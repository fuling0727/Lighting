#version 330

// Default color buffer location is 0
// If you create framebuffer your own, you need to take care of it
layout(location=0) out vec4 color;

in vec2 fTexcoord;
uniform sampler2D uSampler;
in VS_OUT
{
  vec3 worldPos;
  vec3 normal;
}fs_in;
struct DirectionalLight
{
    vec3 Color;
    float AmbientIntensity;
};
uniform DirectionalLight g;
uniform vec3 color_ambient;
uniform vec3 color_diffuse;
uniform vec3 color_specular;
uniform vec3 lightPos;
uniform vec3 viewPos;
uniform float shininess = 16.0f;
uniform vec3 blinn;
float specularStrength = 0.8;
//glBindTexture in main set value to sampler2D
void main()
{
	vec3 lightDir = normalize(lightPos - fs_in.worldPos);
	
	vec3 norm = normalize(fs_in.normal);
	float diffuse = max(dot(norm, lightDir),0.0);
	vec3 diff = diffuse * color_diffuse;
	
	vec3 r = reflect( -lightDir, norm);
        vec3 viewDir = normalize(viewPos - fs_in.worldPos);
	vec3 halfwayDir = normalize(lightDir + viewDir);
	float specular;
	specular = pow(max(0.0f, dot(viewDir, r)), 16.0);
	if(blinn.x == 0.0)
		specular = pow(max(0.0f, dot(viewDir, r)), 16.0);	
	else if(blinn.x == 1.0){
		specular = pow(max(0.0f, dot(norm, halfwayDir)), shininess);	
	}
	vec3 spec = specular * color_specular * specularStrength;
	//color = texture(uSampler,fTexcoord) * vec4(g.Color, 1.0f) * vec4((ambient + diff),1.0);
	color = vec4((color_ambient+diff+spec)*g.Color,1.0) * texture(uSampler,fTexcoord);
}
